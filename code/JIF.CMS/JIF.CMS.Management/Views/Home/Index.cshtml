@model JIF.CMS.Core.Configuration.JIFConfig
<div class="row">
    <div class="col-md-6">
        <div class="box box-primary">
            <div class="box-header with-border">
                Welcome Admin Panel
            </div>
            <div class="box-body">
                <h1>@Model.WebSiteInfo.SiteName</h1>
                <h2>@Model.WebSiteInfo.Email</h2>
                <h3>@Model.WebSiteInfo.GitHub</h3>
                <h1>@Model.AttachmentConfig.UploadAddress</h1>
                @*<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=443070377&auto=1&height=66"></iframe>*@
                <div>
                    <a href="javascript:;" class="btn btn-info" id="btn-deferred">deferred / promise</a>

                    <a href="javascript:;" class="btn btn-warning" id="btn-async-a">Async A</a>
                    <a href="javascript:;" class="btn btn-danger" id="btn-async-b">Async A + B</a>
                    <a href="javascript:;" class="btn btn-default" id="btn-async-c">Async A -> B -> C 链条</a>
                    <a href="javascript:;" class="btn btn-default" id="btn-async-d">使用 Ajax 返回的 Promise</a>
                </div>
            </div>
            <div class="box-footer">
                <h3>@ViewBag.RedisName</h3>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">

        var _asyncB;

        $(function () {

            var $outputBox = $('.box-body');

            function print(s) {
                $outputBox.append('<p>' + s + '</p>');
            }


            function asyncA() {
                return $.ajax({
                    url: '/home/a'
                });
            }

            function asyncB(message) {
                return $.ajax({
                    url: '/home/b',
                    data: { message }
                });
            }


            function asyncC(message) {
                return $.ajax({
                    url: '/home/c',
                    data: { message }
                });
            }


            var deferred = new $.Deferred();


            deferred.done(function () {

                print('deferred is resolved');

            }).fail(function () {

                print('deferred is rejected');

            }).always(function () {

                print('always run no matter deferred is resolved or rejected');

            });


            $('#btn-deferred').click(function () {

                deferred.reject();

                deferred.done(function () {
                    print('resolve 之后绑定的 done, 会立即执行');
                });

                deferred.fail(function () {
                    print('reject 之后绑定的 fail, 会立即执行');
                });

                deferred.always(function () {
                    print('resolve 之后绑定的  always');
                });


                var mm = wait(2000);

                console.log(mm);
                mm.done(function () {
                    print(' +2s 之后.')
                });
            });


            function wait(time) {
                var deferred = $.Deferred();

                setTimeout(function () {
                    deferred.resolve();
                }, time);

                return deferred.promise();
            }



            $('#btn-async-a').click(function () {
                asyncA().done(function () {
                    print('async - A done 1.');
                }, function () {
                    print('async - A done 2.');
                }, function () {
                    print('async - A done 3.');
                }).fail(function () {
                    print('async - A fail.');
                }).always(function () {
                    print('async - A complete.');
                });
            });

            $('#btn-async-b').click(function () {
                $.when(asyncC(), asyncB()).then(function (dataC, dataB) {

                    _asyncB = dataB;
                    console.log(dataB);

                    print('A+B Ok.  dataB : ' + dataB[0] + ',dataC : ' + dataC[0]);
                }, function (dataC, dataB) {

                    console.log(dataB);
                    console.log(dataC);

                    print('async A + B, fail. dataB : ' + dataB[0] + ',dataC : ' + dataC[0]);
                });
            });

            $('#btn-async-c').click(function () {
                asyncA().then(function (data) {

                    print(data);
                    console.log(data);

                    return asyncB(data);

                }).then(function (data) {
                    print(data);
                    console.log(data);

                    return asyncC(data);

                }).then(function (data) {

                    print(data);
                    console.log(data);

                }, function (data) {
                    print('C - 失败');
                });
            });


            $('#btn-async-d').click(function () {
                var ac = asyncC('hello world').done(function (data) {
                    print(data);
                });

                ac.resolve();
            });
        });
    </script>
}
